#!/usr/bin/env ruby
require 'rubygems'
require 'gli'
require 'sport_ngin_aws_auditor'

include GLI::App

program_desc 'Sport Ngin AWS Auditor'
version SportNginAwsAuditor::VERSION

wrap_help_text :verbatim

flag [:config], :desc => 'SportNginAwsAuditor config file path', :default_value => SportNginAwsAuditor::DefaultPaths.config
flag [:display], :desc => 'The name that should be printed in the output'
switch [:aws_roles], :desc => 'Use AWS roles instead of an ~/.aws/credentials file'
switch [:assume_roles], :desc => 'Assume roles to audit cross accounts; should have roles/policies already set up'
flag [:role_name], :desc => 'The name of the role that is giving cross account access', :default_value => 'CrossAccountAuditorAccess'
flag [:arn_id], :desc => 'The identifying digits of the AWS arn if using assume_roles;
                          should be the numerical part of the example:
                          arn:aws:iam::999999999999:role/#{role_name}'
flag [:region], :desc => 'The region(s) the audit should occur in; if no region is specified, then the auditor will be run in every
                          U.S. region. To run multiple regions, the input should be a string like: us-east-1, us-east-2'

program_long_desc """
DOCUMENTATION
"""

commands_from File.expand_path(File.dirname(__FILE__) + '/../lib/sport_ngin_aws_auditor/commands')

pre do |global,command,options,args|
  SportNginAwsAuditor::Config.load(global[:config])
  SportNginAwsAuditor::Config.merge! global
  true
end

on_error do |exception|
  if ENV['GLI_DEBUG']
    puts exception
    puts exception.backtrace
  else
    true
  end
end

exit run(ARGV)
